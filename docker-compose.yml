services:
  postgres:
    image: postgres:16-alpine
    container_name: container-mm-postgres-dev
    restart: unless-stopped
    env_file:
      - .env.docker
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-container_mm_dev}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres_dev_password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-container_mm_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - container-mm-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: container-mm-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@container-mm.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_DISABLE_POSTFIX: true
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - postgres
    networks:
      - container-mm-network
    profiles:
      - dev-tools

volumes:
  postgres_dev_data:
    driver: local

networks:
  container-mm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16